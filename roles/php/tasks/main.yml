- name: Upgrade System
  apt: upgrade=dist update_cache=yes

- name: Add php repository
  apt_repository:
   repo: 'ppa:ondrej/php'

# - name: Install PHP
#   apt: name=php{{php_version}} state=latest

# - name: Install PHP MB
#   apt: name=php{{php_version}}-mbstring state=latest

# - name: Install PHP XML
#   apt: name=php-xml state=latest

- name: Install php
  apt:
      pkg: "{{ item }}"
      state: installed
      update_cache: yes
  with_items:
    - libapache2-mod-php
    - php
    - php{{ php_version }}-common
    - php{{ php_version }}-tokenizer
    - php{{ php_version }}-json
    - php{{ php_version }}-bcmath
    - php{{ php_version }}-opcache
    - php{{ php_version }}-cli
    - php{{ php_version }}-fpm
    - php{{ php_version }}-curl
    - php{{ php_version }}-gd
    - php{{ php_version }}-intl
    - php{{ php_version }}-mbstring
    - php{{ php_version }}-mysql
    - php{{ php_version }}-xml
    - php{{ php_version }}-zip
  notify:
    - Start php-fpm
  become: true

- name: Install unzip
  apt: name=unzip state=latest


- name: Download php-composer
  get_url:
    url: https://getcomposer.org/installer
    dest: /tmp/installer

- name: install composer
  shell: cat /tmp/installer | php -- --install-dir=/usr/local/bin
  args:
    creates: /usr/local/bin/composer

- name: rename composer.phar to composer
  shell: mv /usr/local/bin/composer.phar /usr/local/bin/composer
  args:
    creates: /usr/local/bin/composer

- name: make composer executable
  file: 
    path: /usr/local/bin/composer
    mode: a+x
    state: file

- name: Install a composer
  ansible.builtin.apt:
    name: composer
    state: present    

- name: copy .env-example to .env
  copy:
    src: /var/www/html/{{ vhost_name}}/.env-example
    dest: /var/www/html/{{ vhost_name }}/.env

- name: Configure your .env file
  template: src=env.conf.j2 dest="/var/www/html/{{ vhost_name }}/.env"

- name: Ansible shell module multiple commands  
  shell: "{{ item }}" 
  become: true
  with_items:  
      - php artisan key:generate  
      - php artisan config:cache 
      - php artisan migrate:fresh  
      - php artisan migrate --seed  
  args:  
      chdir: /var/www/html/{{ vhost_name }} 
      notify: reload apache2
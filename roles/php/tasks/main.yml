- name: Update system
  apt: update_cache=yes cache_valid_time=3600

- name: Upgrade System
  apt: upgrade=yes cache_valid_time=3600

# - name: Add php repository
#   apt_repository:
#    repo: 'ppa:ondrej/php'

- name: Install Php dependencies
  command: apt install software-properties-common -y

- name: Download foo.conf
  ansible.builtin.get_url:
    url: https://packages.sury.org/php/apt.gpg
    dest: /etc/apt/trusted.gpg.d/php.gpg

- name: Add PPA to the server packages
  command: echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/php.list

- name: Update system
  apt: update_cache=yes cache_valid_time=3600

- name: Upgrade System
  apt: upgrade=yes cache_valid_time=3600

- name: Install PHP 8.1  
  command: apt install -y php8.1

- name: Install php dependencies
  apt:
      pkg: "{{ item }}"
      state: latest
      update_cache: yes
  with_items:
    - libapache2-mod-php
    - php
    - php8.1-common
    - php8.1-tokenizer
    - php8.1-json
    - php8.1-bcmath
    - php8.1-opcache
    - php8.1-cli
    - php8.1-curl
    - php8.1-gd
    - php8.1-intl
    - php8.1-mbstring
    - php8.1-mysql
    - php8.1-pgsql
    - php8.1-xml
    - php8.1-zip
  become: true

- name: Install unzip
  apt: name=unzip state=latest

- name: checkout latest code from github
  git: 
    repo: "{{ repo_url }}"
    dest: /var/www/html/
    clone: yes  

- name: copy .env-example to .env
  copy:
    src: /var/www/html/{{ vhost_name}}/.env-example
    dest: /var/www/html/{{ vhost_name }}/.env

- name: Configure your .env file
  template: src=env.conf.j2 dest="/var/www/html/{{ vhost_name }}/.env"

- name: copy lavarel project
  command: sudo mv /var/www/html/laravel-realworld-example-app /var/www/html/{{ vhost_name }}

- name: Change permission
  command: sudo chgrp -R www-data /var/www/html/{{ vhost_name }}/

- name: Change permission
  command: sudo chmod -R 775 /var/www/html/{{ vhost_name }}/storage

- name: Change permission
  command: sudo chmod -R 775 /var/www/html/{{ vhost_name }}/bootstrap/cache
  
- name: Change permission
  command: sudo chmod -R 775 /var/www/html/{{ vhost_name }}

# - name: Remove default apache vhost config from sites-enabled
#   file: name=/etc/apache2/sites-enabled/000-default.conf state=absent

# - name: copy .env-example to .env
#   shell: sudo cp /var/www/html/{{ vhost_name}}/.env-example /var/www/html/{{ vhost_name }}/.env

- name: Download php-composer
  command: curl -sS https://getcomposer.org/installer | php

- name: Install
  command: php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer

- name: rename composer.phar to composer
  shell: mv /usr/local/bin/composer.phar /usr/local/bin/composer
  args:
    creates: /usr/local/bin/composer

- name: make composer executable
  file: 
    path: /usr/local/bin/composer
    mode: a+x
    state: file

# - name: Install a composer
#   ansible.builtin.apt:
#     name: composer
#     state: present
- name: Composer Install
  composer:
    command: install
    working_dir: /var/www/html/{{ vhost_name }}

- name: Ansible shell module multiple commands  
  shell: "{{ item }}" 
  become: true
  with_items:  
      - php artisan key:generate  
      - php artisan config:cache 
      - php artisan migrate:fresh  
      - php artisan migrate --seed  
  args:  
      chdir: /var/www/html/{{ vhost_name }} 
      notify: reload apache2


- name: Create apache vhosts for  domain
  template: 
    src: web.conf.j2 
    dest: "/etc/apache2/sites-available/{{ vhost_name }}.conf" 
    owner: www-data 
    group: www-data 
    mode: '0644'

- name: Enable the Apache rewrite module
  command:  a2enmod rewrite

- name: Disable apache default host configuration 
  command: a2dissite 000-default.conf

- name: Activate the lavarel virtual host configuration
  command:  a2ensite {{ vhost_name }}.conf

  notify:
    - restart apache2     